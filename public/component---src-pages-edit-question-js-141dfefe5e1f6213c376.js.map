{"version":3,"file":"component---src-pages-edit-question-js-141dfefe5e1f6213c376.js","mappings":"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","sources":["webpack://question-tracker-frontend/./src/components/Description.jsx","webpack://question-tracker-frontend/./src/components/Solution.jsx","webpack://question-tracker-frontend/./src/pages/editQuestion.js"],"sourcesContent":["import { StaticImage } from \"gatsby-plugin-image\";\nimport React, { useState } from \"react\";\n\nfunction Description({ addDes, question, setAddDes, setQuestion,desLen, setDesLen }) {\n\n  const [des, setDes] = useState(\"\");\n  const [desNum, setDesNum] = useState(\"\");\n  \n  const onDescChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setDes(value);\n\n    let state = question;\n    state.Description[desNum].Description = des;\n    \n    //console.log(value, state);\n\n    setQuestion(state);\n  };\n\n  const addDescriptionHandler = () => {\n    setAddDes(true);\n    let newState = question;\n    newState.Description.push(\n      {\n        Description: \"\"\n      }\n    )\n    ////console.log(newState)\n    setQuestion(newState);\n    setDesLen(question.Description.length)\n    setDesNum(desLen)\n    setDes(\"\")\n    //console.log(question.Description.length > 0)\n  }\n\n\n  const changeDescription = (key) => {\n\n    console.log(key);\n    setDesNum(key)\n    setDes(question.Description[key].Description)\n  }\n\n  const deleteDescription = (key) => {\n    //console.log(\"del key\"+key+\"and next key\"+key+1)\n    let newState = question;\n    newState.Description.splice(key, 1)\n    console.log(newState)\n    setQuestion(newState);\n    setDesLen(question.Description.length)\n    if (question.Description.length > 0) {\n      changeDescription(0)\n\n    }\n  }\n\n\n\n\n  return (\n    <div className=\"Description\">\n\n      <button type=\"button\" onClick={addDescriptionHandler}>Add Description</button>\n\n      {addDes ? (\n        <>\n          {desLen > 0 ?\n            <div>\n              <div className=\"input-textarea\">\n                <span></span>\n                <textarea\n                  name=\"Description\"\n                  id=\"Description\"\n                  onChange={onDescChangeHandler}\n                  value={des}\n                  placeholder=\"Add Description\"\n                ></textarea>\n              </div>\n\n              <table>\n                <thead>\n                  <tr>\n                    <th className=\"id\">Description Number</th>\n                    <th className=\"des\">\n                      Description\n                    </th>\n                    <th className=\"edit\" >Edit</th>\n\n                    <th className=\"del\">Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {question.Description.map((data, key) => {\n                    return (\n                      <tr key={key}>\n                        <td className=\"id\">{key + 1}</td>\n                        {desNum === key ?\n                          <td className=\"des\">{des}</td> :\n                          <td className=\"des\">{data.Description}</td>\n                        }\n\n                        <td className=\"edit\" onClick={() => changeDescription(key)}><StaticImage src=\"../images/edit.svg\" alt=\"edit\" ></StaticImage></td>\n                        <td className=\"del\" onClick={() => deleteDescription(key)}> <StaticImage src=\"../images/DeleteForever.svg\" alt=\"Delete\" ></StaticImage> </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n            : <>error</>\n          }\n        </>\n\n      ) : (\n        <>\n          {desLen > 0 ?\n\n            <table>\n              <thead>\n                <tr>\n                  <th className=\"id\">Description Number</th>\n                  <th className=\"des\">\n                    Description\n                  </th>\n                  <th className=\"edit\" >Edit</th>\n\n                  <th className=\"del\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {question.Description.map((data, key) => {\n                  return (\n                    <tr key={key}>\n                      <td className=\"id\">{key + 1}</td>\n                      {desNum === key ?\n                        <td className=\"des\">{des}</td> :\n                        <td className=\"des\">{data.Description}</td>\n                      }\n\n                      <td className=\"edit\" onClick={() => changeDescription(key)}><StaticImage src=\"../images/edit.svg\" alt=\"edit\" ></StaticImage></td>\n                      <td className=\"del\" onClick={() => deleteDescription(key)}> <StaticImage src=\"../images/DeleteForever.svg\" alt=\"Delete\" ></StaticImage> </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table> : <>No Descriptions</>\n          }\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Description;\n","import { StaticImage } from \"gatsby-plugin-image\";\nimport React, { useState } from \"react\";\n\nfunction Solution({ addSol, question, setAddSol, setQuestion , SolLen , setSolLen }) {\n\n  const [Sol, setSol] = useState(\"\");\n  const [SolNum, setSolNum] = useState(\"\");\n  \n\n  const onSolChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setSol(value);\n\n    let state = question;\n    console.log(SolNum)\n    state.Solution[SolNum].Solution = Sol;\n    \n    //console.log(value, state);\n\n    setQuestion(state);\n  };\n\n  const addSolutionHandler = () => {\n    setAddSol(true);\n    let newState = question;\n    newState.Solution.push(\n      {\n        Solution: \"\"\n      }\n    )\n    console.log(newState)\n    setQuestion(newState);\n    setSolLen(newState.Solution.length)\n    setSolNum(newState.Solution.length-1)\n    setSol(\"\")\n    console.log(\"solLen solNum\")\n    console.log(SolLen,SolNum,newState.Solution.length)\n    //console.log(question.Solution.length > 0)\n  }\n\n\n  const changeSolution = (key) => {\n\n    console.log(key);\n    setSolNum(key)\n    setSol(question.Solution[key].Solution)\n  }\n\n  const deleteSolution = (key) => {\n    console.log(\"del key \"+key+\" and sol Len \"+(SolLen))\n    let newState = question;\n    newState.Solution.splice(key, 1)\n    console.log(\"newSatate\")\n    console.log(newState)\n    setQuestion(newState);\n    setSolLen(newState.Solution.length)\n    console.log(\"sollen acclen\")\n    console.log(SolLen,question.Solution.length)\n    console.log(\"question State\")\n    console.log(question)\n    \n    if (question.Solution.length > 0) {\n      changeSolution(0)\n\n    }\n  }\n\n\n\n\n  return (\n    <div className=\"Solution\">\n\n      <button type=\"button\" onClick={addSolutionHandler}>Add Solution</button>\n\n      {addSol ? (\n        <>\n          {SolLen > 0 ?\n            <div>\n              <div className=\"input-textarea\">\n                <span></span>\n                <textarea\n                  name=\"Solution\"\n                  id=\"Solution\"\n                  onChange={onSolChangeHandler}\n                  value={Sol}\n                  placeholder=\"Add Solution\"\n                ></textarea>\n              </div>\n\n              <table>\n                <thead>\n                  <tr>\n                    <th className=\"id\">Solution Number</th>\n                    <th className=\"Sol\">\n                      Solution\n                    </th>\n                    <th className=\"edit\" >Edit</th>\n\n                    <th className=\"del\">Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {question.Solution.map((data, key) => {\n                    return (\n                      <tr key={key}>\n                        <td className=\"id\">{key + 1}</td>\n                        {SolNum === key ?\n                          <td className=\"Sol\">{Sol}</td> :\n                          <td className=\"Sol\">{data.Solution}</td>\n                        }\n\n                        <td className=\"edit\" onClick={() => changeSolution(key)}><StaticImage src=\"../images/edit.svg\" alt=\"edit\" ></StaticImage></td>\n                        <td className=\"del\" onClick={() => deleteSolution(key)}> <StaticImage src=\"../images/DeleteForever.svg\" alt=\"Delete\" ></StaticImage> </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n            : <>NO Solutions </>\n          }\n        </>\n\n      ) : (\n        <>\n          {SolLen >  0 ?\n\n            <table>\n              <thead>\n                <tr>\n                  <th className=\"id\">Solution Number</th>\n                  <th className=\"Sol\">\n                    Solution\n                  </th>\n                  <th className=\"edit\" >Edit</th>\n\n                  <th className=\"del\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {question.Solution.map((data, key) => {\n                  return (\n                    <tr key={key}>\n                      <td className=\"id\">{key + 1}</td>\n                      {SolNum === key ?\n                        <td className=\"Sol\">{Sol}</td> :\n                        <td className=\"Sol\">{data.Solution}</td>\n                      }\n\n                      <td className=\"edit\" onClick={() => changeSolution(key)}><StaticImage src=\"../images/edit.svg\" alt=\"edit\" ></StaticImage></td>\n                      <td className=\"del\" onClick={() => deleteSolution(key)}> <StaticImage src=\"../images/DeleteForever.svg\" alt=\"Delete\" ></StaticImage> </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table> : <>No Solutions</>\n          }\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Solution;\n","import React, { useEffect, useState } from \"react\";\nimport DefaultLayoutWrapper from \"../components/DefaultLayoutWrapper\";\nimport { Link } from \"gatsby\";\nimport axios from \"axios\";\nimport style from \"../css/module.editQuestion.sass\";\nimport Description from \"../components/Description\";\nimport Solution from \"../components/Solution\";\nconst apiUrl = \"http://drkakku.pythonanywhere.com\";\n\nfunction EditQuestion({ location }) {\n  const [question, setQuestion] = useState({\n    QuestionName: \"\",\n    QuestionURL: \"\",\n    QuestionStatus: false,\n    StartDate: \"\",\n    StartTime: \"\",\n    EndDate: null,\n    EndTime: null,\n    Description: [],\n    Solution: [],\n  });\n  const [error, setError] = useState(null);\n  const [status,setStatus] = useState(false);\n  const [addDes,setAddDes] = useState(false);\n  const [desLen, setDesLen] = useState(question.Description.length);\n\n  const [addSol,setAddSol] = useState(false);\n  const [SolLen, setSolLen] = useState(question.Solution.len);\n  const ingestData = (data) => {\n    //console.log(data)\n    data = data[0]\n    if (data.StartTime.length > 8) {\n      data.StartTime = data.StartTime.slice(0, 8);\n    }\n    setSolLen(data.Solution.length)\n    setDesLen(data.Description.length)\n    \n    return data;\n    \n  };\n\n  const refreshQuestions = () => {\n    axios\n      .post(apiUrl + \"/queryQuestion\", {\n        modelType: \"questions\",\n        queryType: \"filterBy\",\n        query: [{ Id: location.state.data }],\n      })\n      .then((res) => {\n        let data = ingestData(res.data.data);\n\n        setQuestion(data);\n        setStatus(true);\n\n\n        console.log(question);\n        console.log(data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const dataPreprocess = () => {\n    const startDateTimeObj = new Date(\n      question.StartDate + \"T\" + question.StartTime\n    );\n    const endDateTimeObj = new Date(question.EndDate + \"T\" + question.EndTime);\n    //console.log(endDateTimeObj);\n    let startDateTime = startDateTimeObj.getTime();\n    let endDateTime = endDateTimeObj.getTime();\n    let EndDate = question.EndDate;\n    let EndTime = question.EndTime;\n    if (question.QuestionStatus === false) {\n      //console.log(\"entered\");\n      EndDate = null;\n      EndTime = null;\n    }\n    let desArr=[]\n    for (let i = 0; i < question.Description.length; i++) {\n      desArr.push(question.Description[i].Description)\n      \n    }\n    console.log(question.Solutions)\n    let solArr=[]\n    for (let i = 0; i < question.Solution.length; i++) {\n      solArr.push(question.Solution[i].Solution)\n      \n    }\n\n    console.log(desArr)\n\n    let response = {\n      Id: question.Id,\n      QuestionName: question.QuestionName,\n      QuestionURL: question.QuestionURL,\n      QuestionStatus: question.QuestionStatus,\n      StartDate: question.StartDate,\n      StartTime: question.StartTime,\n      EndDate: EndDate,\n      EndTime: EndTime,\n      startDateTime: startDateTime,\n      endDateTime: endDateTime,\n      Description:desArr,\n      Solution:solArr,\n    };\n\n    //console.log(response);\n    return response;\n  };\n\n  const validateData = () => {\n    let status = false;\n\n    if ((question.QuestionName == null) | (question.QuestionURL == null)) {\n      setError(\"name or url cannot be blank\");\n      return false;\n    }\n\n    //console.log(question.QuestionStatus === false);\n\n    if (question.QuestionStatus === false) {\n      //console.log(\"entered\");\n      setQuestion((prevProps) => ({\n        ...prevProps,\n        EndDate: null,\n        EndTime: null,\n      }));\n    }\n\n    status = true;\n    return status;\n  };\n\n  const RenderError = () => {\n    if (error) return <div className=\"error\">Error is :- {error}</div>;\n  };\n\n  const onSubmitHandler = (data) => {\n    data.preventDefault();\n\n    if (validateData()) {\n      let response = dataPreprocess();\n      postQuestion(response);\n      setError(null);\n    }\n  };\n\n  const postQuestion = (data) => {\n    axios\n      .post(apiUrl + \"/updateQuestion\", { data: data })\n      .then((res) => {\n        //console.log(res.data);\n        window.location.href = \"/checkQuestions\"\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n\n\n  useEffect(() => {\n    refreshQuestions();\n  }, []);\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.target;\n    //console.log(question);\n    //console.log(name, value);\n    setQuestion((prevProps) => ({\n      ...prevProps,\n      [name]: value,\n    }));\n  };\n\n  const onCheckBoxChangeHandler = (event) => {\n    let questionStatus = question.QuestionStatus ? false : true;\n    //console.log(questionStatus);\n    setQuestion((prevProps) => ({\n      ...prevProps,\n      QuestionStatus: questionStatus,\n    }));\n  };\n\n  \nif (location){\n  return (\n    <DefaultLayoutWrapper>\n      <div>\n        {status ? (\n          <div>\n            There is nothing to see here please go back using this link\n            <Link to=\"./checkQuestions.js\">Go Back</Link>\n          </div>\n        ) : (\n          <div className=\"mainContent\">\n            <form onSubmit={onSubmitHandler} >\n              <div className=\"input\">\n                <span> Question Name :- </span>{\" \"}\n                <input\n                  type=\"text\"\n                  name=\"QuestionName\"\n                  id=\"QuestionName\"\n                  value={question[\"QuestionName\"]}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              \n              <div className=\"input\">\n                <span> URL :- </span>{\" \"}\n                <input\n                  type=\"text\"\n                  name=\"QuestionURL\"\n                  id=\"QuestionURL\"\n                  value={question[\"QuestionURL\"]}\n                  onChange={onChangeHandler}\n                />\n              </div>\n\n              <div className=\"input\">\n                <span> Start Date :- </span>{\" \"}\n                <input\n                  type=\"date\"\n                  name=\"StartDate\"\n                  id=\"StartDate\"\n                  value={question[\"StartDate\"]}\n                  onChange={onChangeHandler}\n                />\n              </div>\n\n              <div className=\"input\">\n                <span> Start Time :- </span>{\" \"}\n                <input\n                  type=\"time\"\n                  name=\"StartTime\"\n                  id=\"StartTime\"\n                  value={question[\"StartTime\"]}\n                  onChange={onChangeHandler}\n                />\n              </div>\n\n              <div className=\"input\">\n                <span> Completion Status :- </span>{\" \"}\n                <input\n                  type=\"checkbox\"\n                  name=\"QuestionStatus\"\n                  id=\"QuestionStatus\"\n                  checked={question[\"QuestionStatus\"]}\n                  onChange={onCheckBoxChangeHandler}\n                />\n              </div>\n\n              {question.QuestionStatus ? (\n                <>\n                  <div className=\"input\">\n                    <span> End Date :- </span>{\" \"}\n                    <input\n                      type=\"date\"\n                      name=\"EndDate\"\n                      id=\"EndDate\"\n                      value={question[\"EndDate\"]}\n                      onChange={onChangeHandler}\n                    />\n                  </div>\n\n                  <div className=\"input\">\n                    <span> End Time :- </span>{\" \"}\n                    <input\n                      type=\"time\"\n                      name=\"EndTime\"\n                      id=\"EndTime\"\n                      value={question[\"EndTime\"]}\n                      onChange={onChangeHandler}\n                    />\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n\n\n              <Description addDes={addDes} question={question} setAddDes={setAddDes} setQuestion={setQuestion} desLen={desLen} setDesLen={setDesLen} />\n              <Solution addSol={addSol} question={question} setAddSol={setAddSol} setQuestion={setQuestion} SolLen={SolLen} setSolLen={setSolLen} />\n\n              \n              \n              <button type=\"submit\">Update Changes</button>\n            </form>\n          </div>\n        )}\n      </div>\n    </DefaultLayoutWrapper>\n  );\n}\nelse\n{\n  return(\n    <DefaultLayoutWrapper>\n    <div>\n          There is nothing to see here please go back using this link\n          <Link to=\"./checkQuestions.js\">Go Back</Link>\n        </div>\n  </DefaultLayoutWrapper>\n\n  );\n}\n  \n}\n\nexport default EditQuestion;\n"],"names":["addDes","question","setAddDes","setQuestion","desLen","setDesLen","des","setDes","useState","desNum","setDesNum","changeDescription","key","console","log","Description","deleteDescription","newState","splice","length","className","type","onClick","push","name","id","onChange","event","value","target","state","placeholder","map","data","S","src","alt","addSol","setAddSol","SolLen","setSolLen","Sol","setSol","SolNum","setSolNum","changeSolution","Solution","deleteSolution","apiUrl","location","QuestionName","QuestionURL","QuestionStatus","StartDate","StartTime","EndDate","EndTime","error","setError","status","setStatus","len","refreshQuestions","axios","modelType","queryType","query","Id","then","res","slice","ingestData","catch","e","onSubmitHandler","preventDefault","prevProps","validateData","response","startDateTimeObj","Date","endDateTimeObj","startDateTime","getTime","endDateTime","desArr","i","Solutions","solArr","dataPreprocess","postQuestion","window","href","useEffect","onChangeHandler","onCheckBoxChangeHandler","questionStatus","DefaultLayoutWrapper","Link","to","onSubmit","checked"],"sourceRoot":""}