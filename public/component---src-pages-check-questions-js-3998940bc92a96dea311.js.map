{"version":3,"file":"component---src-pages-check-questions-js-3998940bc92a96dea311.js","mappings":"uNAwDA,MArDA,SAAsB,GAA8B,IAA9B,KAAEA,EAAI,KAAEC,EAAI,YAAEC,GAAa,EAC/C,MAAMC,EAAeF,GACM,MAArBA,EAAKA,KAAKG,SAAwC,MAArBH,EAAKA,KAAKI,QAEvC,gCACE,0BAAKJ,EAAKA,KAAKG,SACf,0BAAKH,EAAKA,KAAKI,UAKjB,gCACE,0BAAI,OACJ,0BAAI,QAMZ,OACE,sBAAIC,IAAKN,EAAMO,UAAWN,EAAKO,eAAiB,OAAS,WACvD,0BAAKP,EAAKQ,IACV,0BAAKR,EAAKS,cACV,sBAAIH,UAAU,kBACXN,EAAKO,eAAiB,YAAc,YAEvC,0BAAKP,EAAKU,aACV,0BAAKV,EAAKW,WACV,0BAAKX,EAAKY,WACV,gBAACV,EAAW,CAACF,KAAMA,IACnB,sBAAIa,QAAS,IAAMZ,EAAYa,IAAId,EAAKQ,KACtC,gBAAC,EAAAO,EAAW,CACVC,IAAI,8BACJC,YAAY,UACZC,IAAI,iBAAgB,sBACnB,KAEL,sBAAIZ,UAAU,eACd,gBAAC,EAAAa,KAAI,CACLC,GAAE,gBACFC,MAAO,CAACrB,KAAKA,EAAKQ,KAElB,gBAAC,EAAAO,EAAW,CACZC,IAAI,qBACJC,YAAY,YACZC,IAAI,eAAc,wBAMxB,EClDA,MAAMI,EAAS,oCA2Hf,MAzHA,SAAyB,GAAgB,IAAhB,UAAEC,GAAW,EACpC,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,IAEzCC,EAAmB,KACvBC,EAAAA,EAAAA,KACQN,EAAS,iBAAkB,CAC/BO,UAAW,YACXC,UAAW,QAEZC,MAAMC,IACLC,QAAQC,IAAIF,EAAIhC,MAChByB,EAAeO,EAAIhC,MACnBiC,QAAQC,IAAIV,EAAYxB,KAAO,IAEhCmC,OAAOC,IACNH,QAAQC,IAAIE,EAAE,GACd,EAGAC,EAAS,CACbC,QAAS,CACP,8BAA+B,IAC/B,+BAAgC,+BAI9BC,EAAgBC,IACpBP,QAAQC,IAAI,eAAiBM,GAC7BZ,EAAAA,EAAAA,KAEIN,EAAS,eACT,CACEO,UAAW,YACXrB,GAAIgC,GAENH,GAEDN,MAAMC,IAELL,GAAkB,IAEnBQ,OAAOC,IACNH,QAAQC,IAAIE,EAAE,GACd,EAGAK,EAAoB,IACpBjB,EAAYkB,OACVlB,EAAYxB,KAAK2C,OAAS,EAE1B,uBAAKrC,UAAU,aACb,6BACE,6BACE,0BACE,0BAAI,MACJ,0BAAI,gBACJ,0BAAI,kBACJ,0BAAI,eACJ,sBAAIsC,QAAS,GAAG,mBAChB,sBAAIA,QAAS,GAAG,iBAChB,sBAAItC,UAAU,OAAM,UACpB,sBAAIA,UAAU,eAAc,mBAGhC,6BACGkB,EAAYxB,KAAK6C,KAAI,CAAC7C,EAAMK,IAEzB,gBAAC,EAAY,CACbA,IAAKA,EACHN,KAAMM,EACNL,KAAMA,EACNC,YAAa,CAAEa,IAAKyB,UAUhC,uBAAKjC,UAAU,aACb,6BACE,6BACE,0BACE,sBAAIsC,QAAS,GACV,IAAI,mDAGP,0BAAI,wCASd,uBAAKtC,UAAU,kBACb,yBAAG,4BACH,yBAAG,yBAUX,OAJAwC,EAAAA,EAAAA,YAAU,KACRnB,GAAkB,GACjB,CAACJ,IAGF,2BACE,0BAAQV,QAASc,GAAkB,mCAInC,gBAACc,EAAiB,MAGxB,C,gICzHe,SAASM,IACtB,OACE,2BACE,gBAAC,IAAoB,KACnB,2BAAK,4CAGH,2BACC,gBAAC,IAAe,QAK3B,CACO,MAAMC,EAAO,IAAM,6BAAO,e","sources":["webpack://question-tracker-frontend/./src/components/QuestionList.jsx","webpack://question-tracker-frontend/./src/components/RenderQuestions.jsx","webpack://question-tracker-frontend/./src/pages/checkQuestions.js"],"sourcesContent":["import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nfunction QuestionList({ keys, data, functionObj }) {\n  const EndDateTime = (data) => {\n    if (data.data.EndDate != null && data.data.EndTime != null) {\n      return (\n        <>\n          <td>{data.data.EndDate}</td>\n          <td>{data.data.EndTime}</td>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <td>N/A</td>\n          <td>N/A</td>\n        </>\n      );\n    }\n  };\n\n  return (\n    <tr key={keys} className={data.QuestionStatus ? \"done\" : \"notDone\"}>\n      <td>{data.Id}</td>\n      <td>{data.QuestionName}</td>\n      <td className=\"QuestionStatus\">\n        {data.QuestionStatus ? \"Completed\" : \"Not Done\"}\n      </td>\n      <td>{data.QuestionURL}</td>\n      <td>{data.StartDate}</td>\n      <td>{data.StartTime}</td>\n      <EndDateTime data={data} />\n      <td onClick={() => functionObj.del(data.Id)}>\n        <StaticImage\n          src=\"../images/DeleteForever.svg\"\n          placeholder=\"blurred\"\n          alt=\"Delete Forever\"\n        />{\" \"}\n      </td>\n      <td className=\"editDetails\"> \n      <Link\n      to={`/editQuestion`}\n      state={{data:data.Id}}\n      >\n      <StaticImage\n      src=\"../images/edit.svg\"\n      placeholder=\"tracedSVG\"\n      alt=\"Edit Details\"\n      />\n      </Link>\n      </td>\n    </tr>\n  );\n}\n\nexport default QuestionList;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/renderQuestion.sass\";\nimport QuestionList from \"./QuestionList\";\nconst apiUrl = \"http://drkakku.pythonanywhere.com\";\n\nfunction RenderQuestions({ reloadReq }) {\n  const [questionArr, setquestionArr] = useState(\"\");\n\n  const refreshQuestions = () => {\n    axios\n      .post(apiUrl + \"/queryQuestion\", {\n        modelType: \"questions\",\n        queryType: \"all\",\n      })\n      .then((res) => {\n        console.log(res.data);\n        setquestionArr(res.data);\n        console.log(questionArr.data  )\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const config = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n    },\n  };\n\n  const handleDelete = (id) => {\n    console.log(\"Deleting id \" + id);\n    axios\n      .post(\n        apiUrl + \"/delQuestion\",\n        {\n          modelType: \"questions\",\n          Id: id,\n        },\n        config\n      )\n      .then((res) => {\n        //console.log(res.data);\n        refreshQuestions();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const QuestionComponent = () => {\n    if (questionArr.status) {\n      if (questionArr.data.length > 0) {\n        return (\n          <div className=\"questions\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>QuestionName</th>\n                  <th>QuestionStatus</th>\n                  <th>QuestionURL</th>\n                  <th colSpan={2}>Start Date time</th>\n                  <th colSpan={2}>End Date time</th>\n                  <th className=\"del\">Delete</th>\n                  <th className=\"editDetails\"> Edit Details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {questionArr.data.map((data, key) => {\n                  return (\n                    <QuestionList\n                    key={key}\n                      keys={key}\n                      data={data}\n                      functionObj={{ del: handleDelete }}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"questions\">\n            <table>\n              <thead>\n                <tr>\n                  <th colSpan={4}>\n                    {\" \"}\n                    There are no questions in the databse right now\n                  </th>\n                  <th>Feel Free to add more questions </th>\n                </tr>\n              </thead>\n            </table>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div className=\"questions-fail\">\n          <p>Failed to load the Data </p>\n          <p>Please Try again :C </p>\n        </div>\n      );\n    }\n  };\n\n  useEffect(() => {\n    refreshQuestions();\n  }, [reloadReq]);\n\n  return (\n    <div>\n      <button onClick={refreshQuestions}>\n        Press here to refresh questions\n      </button>\n\n      <QuestionComponent />\n    </div>\n  );\n}\n\nexport default RenderQuestions;\n","import React from \"react\";\nimport DefaultLayoutWrapper from \"../components/DefaultLayoutWrapper\";\nimport RenderQuestions from \"../components/RenderQuestions\";\n\nexport default function checkQuestions() {\n  return (\n    <div>\n      <DefaultLayoutWrapper>\n        <div>\n\n        Edit the questions you feel need editing.          \n          <br/>\n           <RenderQuestions />\n        </div>\n      </DefaultLayoutWrapper>\n    </div>\n  );\n}\nexport const Head = () => <title>All Question</title>\n"],"names":["keys","data","functionObj","EndDateTime","EndDate","EndTime","key","className","QuestionStatus","Id","QuestionName","QuestionURL","StartDate","StartTime","onClick","del","S","src","placeholder","alt","Link","to","state","apiUrl","reloadReq","questionArr","setquestionArr","useState","refreshQuestions","axios","modelType","queryType","then","res","console","log","catch","e","config","headers","handleDelete","id","QuestionComponent","status","length","colSpan","map","useEffect","checkQuestions","Head"],"sourceRoot":""}