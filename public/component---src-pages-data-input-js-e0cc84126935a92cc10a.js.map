{"version":3,"file":"component---src-pages-data-input-js-e0cc84126935a92cc10a.js","mappings":"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","sources":["webpack://question-tracker-frontend/./src/components/QuestionList.jsx","webpack://question-tracker-frontend/./src/components/RenderQuestions.jsx","webpack://question-tracker-frontend/./src/components/FourmInput.jsx","webpack://question-tracker-frontend/./src/pages/dataInput.js"],"sourcesContent":["import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nfunction QuestionList({ keys, data, functionObj }) {\n  const EndDateTime = (data) => {\n    if (data.data.EndDate != null && data.data.EndTime != null) {\n      return (\n        <>\n          <td>{data.data.EndDate}</td>\n          <td>{data.data.EndTime}</td>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <td>N/A</td>\n          <td>N/A</td>\n        </>\n      );\n    }\n  };\n\n  return (\n    <tr key={keys} className={data.QuestionStatus ? \"done\" : \"notDone\"}>\n      <td>{data.Id}</td>\n      <td>{data.QuestionName}</td>\n      <td className=\"QuestionStatus\">\n        {data.QuestionStatus ? \"Completed\" : \"Not Done\"}\n      </td>\n      <td>{data.QuestionURL}</td>\n      <td>{data.StartDate}</td>\n      <td>{data.StartTime}</td>\n      <EndDateTime data={data} />\n      <td onClick={() => functionObj.del(data.Id)}>\n        <StaticImage\n          src=\"../images/DeleteForever.svg\"\n          placeholder=\"blurred\"\n          alt=\"Delete Forever\"\n        />{\" \"}\n      </td>\n      <td className=\"editDetails\"> \n      <Link\n      to={`/editQuestion`}\n      state={{data:data.Id}}\n      >\n      <StaticImage\n      src=\"../images/edit.svg\"\n      placeholder=\"tracedSVG\"\n      alt=\"Edit Details\"\n      />\n      </Link>\n      </td>\n    </tr>\n  );\n}\n\nexport default QuestionList;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/renderQuestion.sass\";\nimport QuestionList from \"./QuestionList\";\nconst apiUrl = \"http://drkakku.pythonanywhere.com\";\n\nfunction RenderQuestions({ reloadReq }) {\n  const [questionArr, setquestionArr] = useState(\"\");\n\n  const refreshQuestions = () => {\n    axios\n      .post(apiUrl + \"/queryQuestion\", {\n        modelType: \"questions\",\n        queryType: \"all\",\n      })\n      .then((res) => {\n        console.log(res.data);\n        setquestionArr(res.data);\n        console.log(questionArr.data  )\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const config = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n    },\n  };\n\n  const handleDelete = (id) => {\n    console.log(\"Deleting id \" + id);\n    axios\n      .post(\n        apiUrl + \"/delQuestion\",\n        {\n          modelType: \"questions\",\n          Id: id,\n        },\n        config\n      )\n      .then((res) => {\n        //console.log(res.data);\n        refreshQuestions();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const QuestionComponent = () => {\n    if (questionArr.status) {\n      if (questionArr.data.length > 0) {\n        return (\n          <div className=\"questions\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>QuestionName</th>\n                  <th>QuestionStatus</th>\n                  <th>QuestionURL</th>\n                  <th colSpan={2}>Start Date time</th>\n                  <th colSpan={2}>End Date time</th>\n                  <th className=\"del\">Delete</th>\n                  <th className=\"editDetails\"> Edit Details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {questionArr.data.map((data, key) => {\n                  return (\n                    <QuestionList\n                    key={key}\n                      keys={key}\n                      data={data}\n                      functionObj={{ del: handleDelete }}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"questions\">\n            <table>\n              <thead>\n                <tr>\n                  <th colSpan={4}>\n                    {\" \"}\n                    There are no questions in the databse right now\n                  </th>\n                  <th>Feel Free to add more questions </th>\n                </tr>\n              </thead>\n            </table>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div className=\"questions-fail\">\n          <p>Failed to load the Data </p>\n          <p>Please Try again :C </p>\n        </div>\n      );\n    }\n  };\n\n  useEffect(() => {\n    refreshQuestions();\n  }, [reloadReq]);\n\n  return (\n    <div>\n      <button onClick={refreshQuestions}>\n        Press here to refresh questions\n      </button>\n\n      <QuestionComponent />\n    </div>\n  );\n}\n\nexport default RenderQuestions;\n","import React from 'react'\n\nfunction FourmInput({stateVal,onChangeHandler,type,name,label}) {\n    return (\n        <div className=\"form-control\">\n            <label>{label}</label>\n            <input\n                type={type}\n                name={name}\n                value={stateVal}\n                onChange={onChangeHandler}\n            />\n        </div>\n    )\n\n}\n// FourmInput.defaultProps={\n//     type:\"text\",\n//     name:\"default\",\n//     label:\"default\",\n// }\n\nexport default FourmInput","import React, { useState, useEffect } from \"react\";\nimport DefaultLayoutWrapper from \"../components/DefaultLayoutWrapper\";\nimport FourmInput from \"../components/FourmInput\";\nimport \"../css/fourm.sass\";\nimport axios from \"axios\";\nimport RenderQuestions from \"../components/RenderQuestions\";\nconst apiUrl = \"http://drkakku.pythonanywhere.com\";\n\nexport default function DataInput() {\n  const [fourmData, updateFourmData] = useState({\n    QuestionName: \"\",\n    QuestionURL: \"\",\n    QuestionStatus: false,\n    StartDate: \"\",\n    StartTime: \"\",\n    EndDate: null,\n    EndTime: null,\n  });\n\n  const [startDateCheck, setstartDateCheck] = useState(false);\n\n  useEffect(() => {\n    defaultFormVals();\n  }, []);\n\n  const defaultFormVals = () => {\n    let defaultEndDate = null;\n    let defaultEndTime = null;\n\n    // let StartDateval = () => {\n    //   let x = new Date().toISOString();\n    //   return x;\n    // };\n    // let temp1 = StartDateval().split(\"T\");\n    // let temp2 = temp1[1];\n    // temp2 = temp2.slice(0, 5);\n\n    // let defaultStartDate = temp1[0];\n    // let defaultStartTime = temp2;\n\n    updateFourmData((prevProps) => ({\n      ...prevProps,\n      QuestionName: \"\",\n      QuestionURL: \"\",\n      StartDate: null,\n      EndDate: defaultEndDate,\n      StartTime: null,\n      EndTime: defaultEndTime,\n    }));\n  };\n\n  const [reloadReq, setreloadReq] = useState(0);\n  const [error, setError] = useState(null);\n\n  const dataPreprocess = () => {\n    const startDateTimeObj = new Date(\n      fourmData.StartDate + \"T\" + fourmData.StartTime\n    );\n    const endDateTimeObj = new Date(\n      fourmData.EndDate + \"T\" + fourmData.EndTime\n    );\n\n    let startDateTime = startDateTimeObj.getTime();\n    let endDateTime = endDateTimeObj.getTime();\n\n    let response = {\n      QuestionName: fourmData.QuestionName,\n      QuestionURL: fourmData.QuestionURL,\n      QuestionStatus: fourmData.QuestionStatus,\n      StartDate: fourmData.StartDate,\n      StartTime: fourmData.StartTime,\n      EndDate: fourmData.EndDate,\n      EndTime: fourmData.EndTime,\n      startDateTime: startDateTime,\n      endDateTime: endDateTime,\n    };\n\n    return response;\n  };\n\n  const validateData = () => {\n    let status = false;\n\n    if ((fourmData.QuestionName == null) | (fourmData.QuestionURL == null)) {\n      setError(\"name or url cannot be blank\");\n      return false;\n    }\n\n    if (fourmData.questionStatus == false) {\n      fourmData.EndDate = null;\n      fourmData.EndTime = null;\n    }\n\n    status = true;\n    return status;\n  };\n\n  const RenderError = () => {\n    if (error) return <div className=\"error\">Error is :- {error}</div>;\n  };\n\n  const onSubmitHandler = (data) => {\n    data.preventDefault();\n\n    if (validateData()) {\n      let response = dataPreprocess();\n      postQuestion(response);\n      setreloadReq(reloadReq + 1);\n      setError(null);\n    }\n  };\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.target;\n    updateFourmData((prevProps) => ({\n      ...prevProps,\n      [name]: value,\n    }));\n  };\n\n  const postQuestion = (data) => {\n    axios\n      .post(apiUrl + \"/addQuestion\", { data: data })\n      .then((res) => {\n        console.log(res.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const onCheckBoxChangeHandler = (event) => {\n    let questionStatus = fourmData.QuestionStatus ? false : true;\n\n    updateFourmData((prevProps) => ({\n      ...prevProps,\n      QuestionStatus: questionStatus,\n    }));\n  };\n\n  const customDateHandler = (event) => {\n    //console.log(\"clicked \");\n    let questionStatus = startDateCheck ? false : true;\n    //console.log(startDateCheck);\n    setstartDateCheck(questionStatus);\n  };\n\n  const EndDateFourm = () => {\n    if (fourmData.QuestionStatus) {\n      return (\n        <>\n          <FourmInput\n            name=\"EndDate\"\n            type=\"date\"\n            stateVal={fourmData.EndDate}\n            onChangeHandler={onChangeHandler}\n            label=\"Question EndDate\"\n          />\n          <FourmInput\n            name=\"EndTime\"\n            type=\"time\"\n            stateVal={fourmData.EndTime}\n            onChangeHandler={onChangeHandler}\n            label=\"Question EndTime\"\n          />\n        </>\n      );\n    }\n  };\n\n  const StartDateFourm = () => {\n    if (startDateCheck) {\n      return (\n        <>\n          <FourmInput\n            name=\"StartDate\"\n            type=\"date\"\n            stateVal={fourmData.StartDate}\n            onChangeHandler={onChangeHandler}\n            label=\"Question StartDate\"\n          />\n          <FourmInput\n            name=\"StartTime\"\n            type=\"time\"\n            stateVal={fourmData.StartTime}\n            onChangeHandler={onChangeHandler}\n            label=\"Question StartTime\"\n          />\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"dataInput\">\n      <DefaultLayoutWrapper>\n        <h1>Question Init</h1>\n        <p>\n          Plese add information about the question you are currently working on\n          and the status of the question ie click the checkbox if you have\n          completed the question already\n        </p>\n\n        <div className=\"fourm\">\n          <form onSubmit={onSubmitHandler}>\n            <FourmInput\n              name=\"QuestionName\"\n              type=\"text\"\n              stateVal={fourmData.QuestionName}\n              onChangeHandler={onChangeHandler}\n              label=\"Question Title\"\n            />\n            <FourmInput\n              name=\"QuestionURL\"\n              type=\"text\"\n              stateVal={fourmData.QuestionURL}\n              onChangeHandler={onChangeHandler}\n              label=\"Question Url\"\n            />\n            <FourmInput\n              name=\"startDateCheck\"\n              type=\"checkbox\"\n              stateVal={startDateCheck}\n              onChangeHandler={customDateHandler}\n              label=\"Custom Start Date\"\n            />\n            <StartDateFourm />\n\n            <div className=\"input\">\n              <span> Completion Status :- </span>{\" \"}\n              <input\n                type=\"checkbox\"\n                name=\"QuestionStatus\"\n                id=\"QuestionStatus\"\n                checked={fourmData[\"QuestionStatus\"]}\n                onChange={onCheckBoxChangeHandler}\n              />\n            </div>\n\n            <EndDateFourm />\n            <div className=\"submit\">\n              <button type=\"submit\">Login</button>\n              <button onClick={defaultFormVals} type=\"reset\">\n                Clear inputs\n              </button>\n            </div>\n            <RenderError />\n          </form>\n        </div>\n\n        <RenderQuestions reloadReq={reloadReq} />\n      </DefaultLayoutWrapper>\n    </div>\n  );\n}\n\nexport const Head = () => <title>Add Question</title>;\n"],"names":["keys","data","functionObj","EndDateTime","EndDate","EndTime","key","className","QuestionStatus","Id","QuestionName","QuestionURL","StartDate","StartTime","onClick","del","S","src","placeholder","alt","Link","to","state","apiUrl","reloadReq","questionArr","setquestionArr","useState","refreshQuestions","axios","modelType","queryType","then","res","console","log","catch","e","config","headers","handleDelete","id","QuestionComponent","status","length","colSpan","map","useEffect","stateVal","onChangeHandler","type","name","label","value","onChange","DataInput","fourmData","updateFourmData","startDateCheck","setstartDateCheck","defaultFormVals","prevProps","setreloadReq","error","setError","RenderError","event","target","postQuestion","EndDateFourm","StartDateFourm","DefaultLayoutWrapper","onSubmit","preventDefault","questionStatus","validateData","response","startDateTimeObj","Date","endDateTimeObj","startDateTime","getTime","endDateTime","dataPreprocess","checked","RenderQuestions","Head"],"sourceRoot":""}